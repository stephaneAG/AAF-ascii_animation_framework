{"name":"AAF - minimalistic ascii animation framework","tagline":"AAF - minimalistic ascii animation framework written in .. .. bash ( part of my answer to \"Can I/we make this particular bear dance ?\" )","body":"### Welcome to the AAF GitHub Project Page\r\nThis project aims to give end-[power-(?)]users an easy & functional way to experiment with ASCII animations directly from a terminal window.\r\nIt provides several functions in \"some unified way\", simplifying further additions & experiments.\r\n\r\nUsing the framework is intended to be a lot like \"Processing ( P5 )\" & others (..) for the users to get their grips on it as quickly as possible.\r\n\r\nThis doc is quite minimalistic, so if you want to use this project, read it thoroughly :)\r\n\r\n### Notes\r\nEach game / project willing to use the framework must be made of at least three files:\r\n- the \"ascii_animation__executable.sh\" file -- the actual executable ( what to run )\r\n- the \"ascii_animation__project.sh\" file -- containing the barebone code & yours\r\n- the \"ascii_animation__framework.sh\" file -- containing the framework itself\r\n\r\nIn a near future, I am willing to try different \"experimental inputs\" & add them to the framework, thus providing sort of \"event handling\" capabilities as an \"additional bonus\" ;p\r\n\r\n### Usage\r\n- the \"ascii_animation__executable.sh\" file:\r\n\r\nThis file is the actual executable ( the one to run / execute to launch your project ).\r\nYou can add any infos you'd like as comments, in the dedicated space if possible or at least preceeded by \"##\".\r\nThe rest of the file needs to stay untouched for the framework to work correctly ( .. ).\r\n\r\nascii_animation__executable.sh - provided / barebone example\r\n```\r\n#!/bin/bash\r\n# the above is not actually necessary for me, except of a cleaner debugging / coding ( .. )\r\n\r\n####\r\n## -- ASCII_ANIMATION FRAMEWORK --\r\n##\r\n##    Game / Project executable\r\n##\r\n##       <GAME/PROJECT NAME>\r\n##       <GAME/PROJECT TYPE>\r\n##       <GAME/PROJECT INFO>\r\n##      <GAME/PROJECT AUTHOR>\r\n##       <GAME/PROJECT MAIL>\r\n##       <GAME/PROJECT WWW.> \r\n####\r\n\r\n## --\r\n# Import the [tiny & wip] Ascii Animation Framework\r\nsource ascii_animation__framework.sh # -- ! MUST BE PRESENT\r\n# Init & launch game/project\r\n_setup # -- ! MUST BE PRESENT\r\n_draw # -- ! MUST BE PRESENT\r\n## --\r\n```\r\n\r\n- the \"ascii_animation__project.sh\" file:\r\n\r\nThis file is the one that contains the barebone code for using the framework & your own functions & variables.\r\nIt MUST contain at least a \"setup()\" & a \"draw()\" function.\r\nMore than necessary, these function are the ones you 'll use for initialization & looping.\r\nAs their names suggest, the \"setup()\" function is used for the initializations while the \"draw()\" function 'll simply enter an infinite loop.\r\nTo exit that infinite loop, simply hit \"Ctrl-C\" & you'll be redirected to your prompt ( nb: some \"custom cleanup handlers\" 'll be added in a near future ( .. ) ). \r\n\r\nascii_animation__project.sh - provided / barebone example\r\n```\r\n#!/bin/bash\r\n# the above is not actually necessary for me, except of a cleaner debugging / coding ( .. )\r\n\r\n####\r\n## -- ASCII_ANIMATION FRAMEWORK --\r\n##\r\n##        Game / Project file\r\n##\r\n####\r\n\r\n## --\r\n\r\n# you can define your variables and function in below\r\n\r\n# \"setup()\" function - 'll run once at the beginning of the game / project execution -- ! MUST BE PRESENT ( can be empty )\r\nsetup(){\r\n  \r\n  saveContext # save cursor position before drawing\r\n  echo -en \"user text in setup() function ...\"\r\n  restoreContext # restore the cursor position after drawing\r\n  \r\n  sleep 5 # wait a little bit for our user to see the message displayed above ( as we're in the \"setup()\" function, it's ok to invoke the \"sleep()\" function -> aka it won't mess with the framerate )\r\n  \r\n}\r\n\r\n# \"draw()\" function - 'll be called repeatedly in an infinite loop until the user hit \"Ctrl-C\" -- ! MUST BE PRESENT ( can be empty )\r\ndraw(){\r\n  \r\n  saveContext # save cursor position before drawing\r\n  drawCenteredText \"Hello World end-user !\" # draw a one-line text, centered\r\n  restoreContext # restore the cursor position after drawing\r\n  \r\n}\r\n```\r\n\r\n- the \"ascii_animation__framework.sh\" file:\r\n\r\nThis file is the the framework itself.\r\nDON'T MODIFY IT UNLESS YOU REALLY KNOW WHAT YOU'RE DOING ! ( yup, that's a warning .. ).\r\nIn fact, you should never [ever] need to do so.\r\nIf you need custom functions ( wich are not already setup system-wide, if you know what i mean -> If you don't, this comment is not for you ), you just have to write them in the \"ascii_animation__project.sh\" file, right before the declaration of the \"setup()\" function ( I left a comment there ;) ).\r\nIf you really, deeply need more space, and to keep a clean \"ascii_animation__project.sh\" file, what you can do is \"source\" the \"big file\" containing you custom code in the \"ascii_animation__project.sh\" file, right were you'd have declared some custom variables & functions.\r\n\r\nascii_animation__project.sh - example of \"sourcing\" an external file containing custom code\r\n```\r\n# ( .. )\r\n# you can define your variables and function in below\r\n# \"source\" the external file's content\r\nsource myexternalfile.sh\r\n# we can also do stuff BEFORE & outside the \"setup()\" function ( not AFTER it elsewhere )\r\n# that's what we'll do here, as an EXAMPLE ( nb: also, DON'T use \"echo\" & prefer the framework equivalent )\r\n# display the number held by our variable defined in the external file\r\ndisplayNumber $aVariable\r\n# echo the text held by another variable defined in our external file\r\necho -en \"$anotherVariable\" \r\n\r\n# \"setup()\" function\r\n# ( .. )\r\n```\r\n\r\nsimple example of an external file that'd be \"sourced\" by the \"ascii_animation__project.sh\" file\r\n( it is good practice NOT to use names starting with \"aaf\" or \"AAF\" -> the framework 'll use these a \"namespaces\" in the next update of the project ).\r\n```\r\n#!/bin/bash\r\n# myexternalfile.sh\r\n\r\n# declare a variable\r\naVariable=0\r\nanotherVariable=\"Hello there ..\"\r\n\r\n# declare a function\r\ndisplayNumber(){\r\n  echo -en \"$1\" # echo the first parameter passed\r\n}\r\n```\r\n### Authors and Contributors\r\nStephaneAG ( @StephaneAG )\r\n\r\n### Support or Contact\r\nFeel free to contact me for any help, suggestion, or related stuff.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}